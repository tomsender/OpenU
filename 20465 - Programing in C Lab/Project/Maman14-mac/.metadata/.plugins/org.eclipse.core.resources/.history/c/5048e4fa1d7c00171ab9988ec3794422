/*
 * parser.c
 *
 *  Created on: Aug 3, 2017
 *      Author: alexz
 */

#include "parser.h"
#include "utils.h"
#define INITIAL_SARRAY_SIZE 8000

bodyArray  parse_file (FILE * file){
	String line;
	bodyArray result;
	int cell_counter;

	line=allocate_mem_string(MAXMEM);
	result=allocate_mem_struct(INITIAL_SARRAY_SIZE);

	cell_counter=0;

	fgets(line,MAXMEM,file);


	result[0] = parse_line(line);
	cell_counter = cell_counter +1;

	return result;

}

body  parse_line (String str){
	body result;
	char line[MAXMEM];


	strcpy(line,str);
	printf("strcpy - %s\n",line);


	/*extract label*/
	fprintf(stderr,"Extracting label:\n");
	strcpy(result.label,extract_label(line));
	fprintf(stderr,"Extracting label - completed\n");

	/*extract instruction*/

	/*printf("%s\n",line);
	strcpy(result.instruction, extract_instruction(line));
*/
	return result;
}

String extract_label (String line){
	String result;
	char * found_char;
	char * array_start;
	int size;

	found_char = strchr(line,':');
	array_start=line;

	size = (found_char-array_start) * sizeof(char);
	printf("size: %d\n",size);

	result = allocate_mem_string(size);

	result = strncmp(result,line,size);

	return result;


}
char * get_label (char * line){
	char * token;
	char copy[MAXMEM];

	strcpy(copy,line);
	token = strtok(copy,":");

		/*printf("token- %s\n",token);*/

		if (!token){
			return NULL;
		}

	return token;
}
/*
char * extract_instruction(char * line){
	char * pt;
	String result;
	pt = strchr(line,'.');

	if (!pt){
		return NULL;
		printf("NULL is here");
	}

	strcpy(result, strncpy(result,pt,10));
	return result;
}
*/

