/*
 ============================================================================
 Name        : Maman12.c
 Author      : Alex Zablotsky
 Version     :
 Copyright   : Your copyright notice
 Description :
 In this
 ============================================================================
 */

#include <stdio.h>
#include <stdlib.h>
typedef struct node * nodePointer;
typedef struct node {
	int character;
	nodePointer next;
	nodePointer previous;
} item;

void addToList(nodePointer *,nodePointer *,int);
void printList(nodePointer);
void freeList(nodePointer *);


int main() {
	int currentChar;
	nodePointer listHead = NULL;
	nodePointer listTail;
	listTail->next=NULL;
	listTail->previous=listHead;


	printf("Hello. Please enter your characters:\n");
	while ( (currentChar=getchar() ) != EOF){

		addToList(&listHead,&listTail,currentChar);
	}

	printf("\nCharacters received. Your input is:\n");

	printList(listHead);

	freeList(&listHead);

	printf("Thanks you, bye");


	return 0;
}

void printList(nodePointer head){

	while (head != NULL){
		printf("%d", head->character);
	}

	printf("***End of list***");
}

void freeList(nodePointer * head){
	nodePointer temp;

	while (*head != NULL){
		temp=*head;
		*head=(*head)->next;
		free(temp);
		temp=*head;
	}

	printf("List is now empty\n");
}

void addToList(nodePointer * head,nodePointer * tail, int newChar){
	nodePointer newNode, temp;
	newNode= (nodePointer)malloc(sizeof(item));

	if (!newNode){
		printf("Cannot allocate memory. Closing the program");
		exit(0);
	}

	newNode->character=newChar;


	if (*head == NULL){
		*head=newNode;
		 newNode->next=*tail;
		 newNode->previous=NULL;
		 temp=*tail;
		temp->previous=newNode;
		temp->next=NULL;
		return;
	}



	newNode->previous=*tail;
	newNode->next=NULL;
	newNode->previous->next=newNode;
	*tail=newNode;
}


